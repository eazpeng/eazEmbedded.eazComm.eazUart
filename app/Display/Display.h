/*************************************************************************
* Copyright:    Midea Kitchenware(Oven).
* File:         Display.h
* Layer:        App.base
* Author:       eaz
* Version:      0.0.171120
* Brief:        Display characters on the position, animation controls
*               inside module.
*               STR_ID->CHAR_MAP->Modify the led buffer.
*************************************************************************/
#ifndef _DISPLAY_H_
#define _DISPLAY_H_

#include "EazTypes.h"

#define OBM_STR_MAX_LEN 24

// data structure
typedef enum
{
    DISP_STR_NULL,
    DISP_STR_OFF,
    DISP_STR_ON,
    DISP_STR_NO,
    DISP_STR_YES,
    DISP_STR_HIGH,
    DISP_STR_MEDIUM,
    DISP_STR_LOW,
    DISP_STR_LOCK,
    DISP_STR_PREHEAT,
    DISP_STR_SERVICE,
    DISP_STR_TURN_OFF_COOKTOP,
    DISP_STR_CLOSE_DOOR,
    DISP_STR_TEST,
    DISP_STR_ERR1,
    DISP_STR_ERR2,
    DISP_STR_ERR3,
    DISP_STR_ERR4,
    DISP_STR_ERR5,
    DISP_STR_ERR6,
    DISP_STR_ERR7,
    DISP_STR_ERR8,
    DISP_STR_CLOCK_TYPE,
    DISP_STR_12HR,
    DISP_STR_24HR,
    DISP_STR_CLOCK_SLEEP,
    DISP_STR_VOLUME,
    DISP_STR_BRIGHTNESS,
    DISP_STR_WAKE_UP_LIGHT,
    DISP_STR_WAKE_UP_MODE,
    DISP_STR_ONE,
    DISP_STR_ANY,
    DISP_STR_UPPER_OFFSET,
    DISP_STR_LOWER_OFFSET,
    DISP_STR_TEMPERATURE_UNITS,
    DISP_STR_UNIT_F,
    DISP_STR_UNIT_C,
    DISP_STR_BAKE_STOP,
    DISP_STR_BROIL_STOP,
    DISP_STR_SABBATH_MODE,
    DISP_STR_COOK_THEN_HOLD_MODE,
    DISP_STR_DEMO_MODE,
    DISP_STR_ID_SUM
}DISP_STR;

typedef enum
{
    SCROLL_STATE_NO,
    SCROLL_STATE_YES,
}SCROLL_STATE;

typedef enum
{
    BLINK_STATE_YES = 0x00,
    BLINK_STATE_NO = 0xFF
}BLINK_STATE;

typedef enum
{
    HEAD_ZERO_STATE_HIDE,
    HEAD_ZERO_STATE_SHOW
}HEAD_ZERO_STATE;

typedef enum
{
    // Digits
    DISP_POS_MAIN_TIME,
    DISP_POS_UPPER_TIME,
    DISP_POS_LOWER_TIME,
    DISP_POS_UPPER_TEMP,
    DISP_POS_LOWER_TEMP,
    // Main Icons
    DISP_POS_MAIN_LOCK_ICON,
    DISP_POS_MAIN_TIME_ICON_DP,
    DISP_POS_MAIN_TIME_ICON_AM,
    DISP_POS_MAIN_TIME_ICON_PM,
    DISP_POS_MAIN_TIME_ICON_HR,
    DISP_POS_MAIN_TIME_ICON_MIN,
    DISP_POS_MAIN_TIME_ICON_SEC,
    // Upper Icons
    DISP_POS_UPPER_FAN_ICON,
    DISP_POS_UPPER_MODE_ICON_BAKE,
    DISP_POS_UPPER_MODE_ICON_BROIL,
    DISP_POS_UPPER_MODE_ICON_HI,
    DISP_POS_UPPER_MODE_ICON_LO,
    DISP_POS_UPPER_MODE_ICON_PROOF,
    DISP_POS_UPPER_MODE_ICON_WARM,
    DISP_POS_UPPER_MODE_ICON_SELF,
    DISP_POS_UPPER_MODE_ICON_STEAM,
    DISP_POS_UPPER_MODE_ICON_CLEAN,
    DISP_POS_UPPER_TIME_ICON_AM,
    DISP_POS_UPPER_TIME_ICON_PM,
    DISP_POS_UPPER_TIME_ICON_DLY,
    DISP_POS_UPPER_TIME_ICON_HR,
    DISP_POS_UPPER_TIME_ICON_MIN,
    DISP_POS_UPPER_TIME_ICON_SEC,
    DISP_POS_UPPER_TIME_ICON_DP,
    DISP_POS_UPPER_TEMP_ICON_F,
    DISP_POS_UPPER_TEMP_ICON_C,
    // Upper Icons
    DISP_POS_LOWER_FAN_ICON,
    DISP_POS_LOWER_MODE_ICON_BAKE,
    DISP_POS_LOWER_MODE_ICON_BROIL,
    DISP_POS_LOWER_MODE_ICON_HI,
    DISP_POS_LOWER_MODE_ICON_LO,
    DISP_POS_LOWER_MODE_ICON_PROOF,
    DISP_POS_LOWER_MODE_ICON_WARM,
    DISP_POS_LOWER_MODE_ICON_SELF,
    DISP_POS_LOWER_MODE_ICON_STEAM,
    DISP_POS_LOWER_MODE_ICON_CLEAN,
    DISP_POS_LOWER_TIME_ICON_AM,
    DISP_POS_LOWER_TIME_ICON_PM,
    DISP_POS_LOWER_TIME_ICON_DLY,
    DISP_POS_LOWER_TIME_ICON_HR,
    DISP_POS_LOWER_TIME_ICON_MIN,
    DISP_POS_LOWER_TIME_ICON_SEC,
    DISP_POS_LOWER_TIME_ICON_DP,
    DISP_POS_LOWER_TEMP_ICON_F,
    DISP_POS_LOWER_TEMP_ICON_C,
}DISP_POSITION;

// interface
extern void DispRefresh(void);
extern void Hide(DISP_POSITION eDispPos);
extern void Disp(DISP_POSITION eDispPos, BLINK_STATE eBlinkState);
extern void DispNumbers(Int16 iValue, HEAD_ZERO_STATE eHeadZeroState, DISP_POSITION eDispPos, BLINK_STATE eBlinkState);
extern void DispString(DISP_STR eStrId, DISP_POSITION eDispPos, BLINK_STATE eBlinkState, SCROLL_STATE eScrollState);

#endif  //_DISPLAY_H_
